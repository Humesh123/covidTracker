{"ast":null,"code":"var _jsxFileName = \"D:\\\\deploy\\\\covidtracker\\\\src\\\\Charts\\\\Charts.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport FetchChartdata from \"../api\";\n\nconst Charts = () => {\n  // const [dailyData,setDailyData]=useState();\n  let dailyData = [];\n  useEffect(() => {\n    async function GetData() {\n      const res = await FetchChartdata(); // setDailyData(()=>{\n      //     return [res];\n      // });\n      //  setDailyData(res);\n\n      dailyData.push(res);\n    }\n\n    GetData();\n  });\n  console.log(dailyData);\n  const LineChart = dailyData.length != 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData[0].map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData[0].map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData[0].map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Charts;","map":{"version":3,"sources":["D:/deploy/covidtracker/src/Charts/Charts.jsx"],"names":["React","useState","useEffect","axios","Line","Bar","FetchChartdata","Charts","dailyData","GetData","res","push","console","log","LineChart","length","labels","map","date","datasets","data","confirmed","label","borderColor","fill","deaths"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,cAAP,MAA2B,QAA3B;;AAGA,MAAMC,MAAM,GAAG,MAAK;AAEpB;AACA,MAAIC,SAAS,GAAG,EAAhB;AAEAN,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeO,OAAf,GAAwB;AACpB,YAAMC,GAAG,GAAG,MAAMJ,cAAc,EAAhC,CADoB,CAEpB;AACA;AACA;AACA;;AACCE,MAAAA,SAAS,CAACG,IAAV,CAAeD,GAAf;AAGJ;;AAEHD,IAAAA,OAAO;AAER,GAdQ,CAAT;AAgBIG,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,QAAMM,SAAS,GAEXN,SAAS,CAACO,MAAV,IAAmB,CAAnB,gBAAyB,oBAAC,IAAD;AACD,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACR,SAAS,CAAC,CAAD,CAAT,CAAaS,GAAb,CAAiB,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAA3B,CADL;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,IAAI,EAACZ,SAAS,CAAC,CAAD,CAAT,CAAaS,GAAb,CAAiB,CAAC;AAACI,UAAAA;AAAD,SAAD,KAAeA,SAAhC,CADC;AAENC,QAAAA,KAAK,EAAC,UAFA;AAGNC,QAAAA,WAAW,EAAC,SAHN;AAINC,QAAAA,IAAI,EAAC;AAJC,OAAD,EAKL;AACAJ,QAAAA,IAAI,EAACZ,SAAS,CAAC,CAAD,CAAT,CAAaS,GAAb,CAAiB,CAAC;AAACQ,UAAAA;AAAD,SAAD,KAAYA,MAA7B,CADL;AAEAH,QAAAA,KAAK,EAAC,QAFN;AAGAC,QAAAA,WAAW,EAAC,KAHZ;AAIAC,QAAAA,IAAI,EAAC;AAJL,OALK;AAFP,KADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,GAe+B,IAjBnC;AAqBA,sBAEI,uDACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAQH,CAnDD;;AAqDA,eAAejB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Line,Bar} from \"react-chartjs-2\";\r\nimport FetchChartdata from \"../api\";\r\n\r\n\r\nconst Charts = () =>{\r\n\r\n// const [dailyData,setDailyData]=useState();\r\nlet dailyData = [];\r\n\r\nuseEffect(()=>{\r\n    async function GetData(){\r\n        const res = await FetchChartdata();\r\n        // setDailyData(()=>{\r\n        //     return [res];\r\n        // });\r\n        //  setDailyData(res);\r\n         dailyData.push(res);\r\n       \r\n    \r\n    }\r\n\r\n  GetData();\r\n    \r\n});\r\n\r\n    console.log(dailyData);\r\n    const LineChart=(\r\n\r\n        dailyData.length !=0 ? ( <Line\r\n                                data={{\r\n                                    labels:dailyData[0].map(({date})=>date),\r\n                                    datasets:[{\r\n                                        data:dailyData[0].map(({confirmed})=>confirmed),\r\n                                        label:\"Infected\",\r\n                                        borderColor:\"#3333ff\",\r\n                                        fill:true,\r\n                                    } , {\r\n                                        data:dailyData[0].map(({deaths})=>deaths),\r\n                                        label:\"Deaths\",\r\n                                        borderColor:\"red\",\r\n                                        fill:true,\r\n                                    } ],\r\n                                }}\r\n                                />  ): null\r\n                    );\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                {/* {LineChart} */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}