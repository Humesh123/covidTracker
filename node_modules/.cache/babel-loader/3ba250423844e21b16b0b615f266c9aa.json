{"ast":null,"code":"var _jsxFileName = \"D:\\\\deploy\\\\covidtracker\\\\src\\\\Charts\\\\Charts.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport FetchChartdata from \"../api\";\n\nconst Charts = props => {\n  console.log(props.data);\n  const [dailyData, setDailyData] = useState([]);\n  const [ConData, setCon] = useState(); // setCon(props.data);\n\n  console.log(ConData); // let dailyData = [];\n\n  useEffect(() => {\n    async function GetData() {\n      const res = await axios.get(`https://covid19.mathdro.id/api/daily`);\n      const modifiedData = res.data.map(dailyData => ({\n        confirmed: dailyData.confirmed.total,\n        deaths: dailyData.deaths.total,\n        date: dailyData.reportDate\n      })); // console.log(modifiedData);\n\n      setDailyData(modifiedData);\n    }\n\n    GetData();\n  }, []);\n  const LineChart = dailyData.length != 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"#f76869\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 34\n    }\n  }) : null; // const barChart = (\n  //     props.data.confirmed ? (\n  //       <Bar\n  //         data={{\n  //           labels: ['Infected', 'Recovered', 'Deaths'],\n  //           datasets: [\n  //             {\n  //               label: 'People',\n  //               backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n  //               data: [props.data.confirmed.value, props.data.recovered.value, props.data.deaths.value],\n  //             },\n  //           ],\n  //         }}\n  //         options={{\n  //           legend: { display: false },\n  //           title: { display: true, text: `Current state in ${props.country}` },\n  //         }}\n  //       />\n  //     ) : null\n  //   );\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, LineChart));\n};\n\nexport default Charts;","map":{"version":3,"sources":["D:/deploy/covidtracker/src/Charts/Charts.jsx"],"names":["React","useState","useEffect","axios","Line","Bar","FetchChartdata","Charts","props","console","log","data","dailyData","setDailyData","ConData","setCon","GetData","res","get","modifiedData","map","confirmed","total","deaths","date","reportDate","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,cAAP,MAA2B,QAA3B;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AAGrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACJ,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAM,CAACa,OAAD,EAASC,MAAT,IAAiBd,QAAQ,EAA/B,CANyB,CAOzB;;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ,EARyB,CASzB;;AAEAZ,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAec,OAAf,GAAwB;AACpB,YAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,sCAAX,CAAlB;AAEA,YAAMC,YAAY,GAAGF,GAAG,CAACN,IAAJ,CAASS,GAAT,CAAcR,SAAD,KAAc;AAC5CS,QAAAA,SAAS,EAACT,SAAS,CAACS,SAAV,CAAoBC,KADc;AAE5CC,QAAAA,MAAM,EAACX,SAAS,CAACW,MAAV,CAAiBD,KAFoB;AAG5CE,QAAAA,IAAI,EAACZ,SAAS,CAACa;AAH6B,OAAd,CAAb,CAArB,CAHoB,CAQpB;;AACAZ,MAAAA,YAAY,CAACM,YAAD,CAAZ;AAEH;;AAEHH,IAAAA,OAAO;AAER,GAhBQ,EAgBP,EAhBO,CAAT;AAkBI,QAAMU,SAAS,GAEXd,SAAS,CAACe,MAAV,IAAmB,CAAnB,gBAAyB,oBAAC,IAAD;AACD,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAChB,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACI,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADL;AAEFK,MAAAA,QAAQ,EAAC,CAAC;AACNlB,QAAAA,IAAI,EAACC,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACC,UAAAA;AAAD,SAAD,KAAeA,SAA7B,CADC;AAENS,QAAAA,KAAK,EAAC,UAFA;AAGNC,QAAAA,WAAW,EAAC,SAHN;AAINC,QAAAA,IAAI,EAAC;AAJC,OAAD,EAKL;AACArB,QAAAA,IAAI,EAACC,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADL;AAEAO,QAAAA,KAAK,EAAC,QAFN;AAGAC,QAAAA,WAAW,EAAC,KAHZ;AAIAE,QAAAA,eAAe,EAAC,SAJhB;AAKAD,QAAAA,IAAI,EAAC;AALL,OALK;AAFP,KADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,GAgB+B,IAlBnC,CA7BqB,CAoDL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGhB,sBAEI,uDACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCN,SADD,CADJ,CAFJ;AASH,CAnFD;;AAqFA,eAAenB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Line,Bar} from \"react-chartjs-2\";\r\nimport FetchChartdata from \"../api\";\r\n\r\n\r\nconst Charts = (props) =>{\r\n\r\n\r\n    console.log(props.data);\r\nconst [dailyData,setDailyData]=useState([]);\r\n\r\nconst [ConData,setCon]=useState();\r\n// setCon(props.data);\r\nconsole.log(ConData)\r\n// let dailyData = [];\r\n\r\nuseEffect(()=>{\r\n    async function GetData(){\r\n        const res = await axios.get(`https://covid19.mathdro.id/api/daily`);\r\n        \r\n        const modifiedData = res.data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n        // console.log(modifiedData);\r\n        setDailyData(modifiedData);\r\n    \r\n    }\r\n\r\n  GetData();\r\n    \r\n},[]);\r\n\r\n    const LineChart=(\r\n\r\n        dailyData.length !=0 ? ( <Line\r\n                                data={{\r\n                                    labels:dailyData.map(({date})=>date),\r\n                                    datasets:[{\r\n                                        data:dailyData.map(({confirmed})=>confirmed),\r\n                                        label:\"Infected\",\r\n                                        borderColor:\"#3333ff\",\r\n                                        fill:true,\r\n                                    } , {\r\n                                        data:dailyData.map(({deaths})=>deaths),\r\n                                        label:\"Deaths\",\r\n                                        borderColor:\"red\",\r\n                                        backgroundColor:\"#f76869\",\r\n                                        fill:true,\r\n                                    } ],\r\n                                }}\r\n                                />  ): null\r\n                    );\r\n\r\n\r\n\r\n                    // const barChart = (\r\n                    //     props.data.confirmed ? (\r\n                    //       <Bar\r\n                    //         data={{\r\n                    //           labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    //           datasets: [\r\n                    //             {\r\n                    //               label: 'People',\r\n                    //               backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    //               data: [props.data.confirmed.value, props.data.recovered.value, props.data.deaths.value],\r\n                    //             },\r\n                    //           ],\r\n                    //         }}\r\n                    //         options={{\r\n                    //           legend: { display: false },\r\n                    //           title: { display: true, text: `Current state in ${props.country}` },\r\n                    //         }}\r\n                    //       />\r\n                    //     ) : null\r\n                    //   );\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n            {LineChart}\r\n            {/* {props.country ? barChart : LineChart} */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}